version: "3.9"

services:
  todo-app:
    build: ./frontend/todo-app
    image: todo-app
    restart: on-failure
    env_file:
      - ./env/todo-app.env
    ports:
      - 8000:80
    networks:
      - frontend

  api-gateway:
    build: ./backend/api-gateway
    image: api-gateway
    restart: on-failure
    env_file:
      - ./env/api-gateway.env
    ports:
      - 8080:80
    networks:
      - backend

  todo-api:
    build: ./backend/todo-api
    image: todo-api
    restart: on-failure
    env_file:
      - ./env/todo-api.env
    networks:
      - backend
    depends_on:
      - db
      - nats-configure

  todo-service:
    build: ./backend/todo-service
    image: todo-service
    restart: on-failure
    env_file:
      - ./env/todo-service.env
    networks:
      - backend
    depends_on:
      - db
      - nats-configure

  notification-service:
    build: ./backend/notification-service
    image: notification-service
    restart: on-failure
    env_file:
      - ./env/notification-service.env
    networks:
      - backend
    depends_on:
      - nats
      - api-gateway

  nats:
    build: ./backend/nats/docker
    image: nats
    restart: on-failure
    env_file:
      - ./env/nats.env
    ports:
      - 4222:4222
    volumes:
      - nats:/nats
    networks:
      - backend

  nats-configure:
    build: ./backend/nats/jetstream
    image: nats-configure
    restart: on-failure
    env_file:
      - ./env/nats.env
    networks:
      - backend
    depends_on:
      - nats

  db:
    build: ./backend/db/postgres
    image: db
    restart: on-failure
    env_file:
      - ./env/postgres.env
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - backend

  db-migrate:
    build: ./backend/db/migrate
    image: db-migrate
    restart: on-failure
    env_file:
      - ./env/migrate.env
    networks:
      - backend
    depends_on:
      - db

  minio:
    image: minio/minio
    restart: on-failure
    command: server /data
    env_file:
      - ./env/minio.env
    ports:
      - 9000:9000
    volumes:
      - minio:/data
    networks:
      - monitor

  minio-migrate:
    build: ./monitor/minio/migrate
    image: minio-migrate
    restart: on-failure
    env_file:
      - ./env/minio.env
      - ./env/minio-migrate.env
    networks:
      - monitor
    depends_on:
      - minio

  loki:
    build: ./monitor/loki
    image: loki
    restart: on-failure
    env_file:
      - ./env/loki.env
    networks:
      - monitor
    depends_on:
      - minio

  promtail:
    build: ./monitor/promtail
    image: promtail
    restart: on-failure
    env_file:
      - ./env/promtail.env
    volumes:
      - promtail:/tmp/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers
    networks:
      - monitor
      - backend
    depends_on:
      - loki

  grafana:
    image: grafana/grafana
    restart: on-failure
    env_file:
      - ./env/grafana.env
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - monitor
      - backend
    depends_on:
      - db

  grafana-configure:
    build: ./monitor/grafana
    image: grafana-configure
    restart: on-failure
    env_file:
      - ./env/grafana-configure.env
    networks:
      - backend
    depends_on:
      - grafana

  keycloak:
    build: ./backend/keycloak/docker
    image: keycloak
    restart: on-failure
    env_file:
      - ./env/keycloak.env
    ports:
      - 8081:8080
    networks:
      - backend
    depends_on:
      - db

networks:
  frontend:
  backend:
  monitor:

volumes:
  db:
  nats:
  minio:
  grafana:
  promtail:
