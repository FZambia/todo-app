version: "3.9"

services:
  traefik:
    build: ./backend/traefik/dev
    image: todo-app/traefik
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - todo-app

  todo-app:
    build: ./frontend
    image: todo-app/todo-app
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/todo-app.env
    networks:
      - todo-app

  todo-api:
    build: ./backend/todo-api
    image: todo-app/todo-api
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/todo-api.env
    networks:
      - todo-app
    depends_on:
      - db
      - nats-configure

  todo-service:
    build: ./backend/todo-service
    image: todo-app/todo-service
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/todo-service.env
    networks:
      - todo-app
    depends_on:
      - db
      - nats-configure

  todo-worker:
    build: ./backend/todo-worker
    image: todo-app/todo-worker
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/todo-worker.env
    networks:
      - todo-app
    depends_on:
      - db
      - temporal

  nats:
    build: ./backend/nats/docker
    image: todo-app/nats
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/nats.env
    ports:
      - 4222:4222
    volumes:
      - nats:/nats
    networks:
      - todo-app

  nats-configure:
    build: ./backend/nats/configure
    image: todo-app/nats-configure
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/nats.env
    networks:
      - todo-app
    depends_on:
      - nats

  centrifugo:
    image: centrifugo/centrifugo
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/centrifugo.env
    ports:
      - 8000:8000
    networks:
      - todo-app
    ulimits:
      nofile:
        soft: 65535
        hard: 65535

  temporal:
    build: ./backend/temporal
    image: todo-app/temporal
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/temporal.env
    ports:
      - 7233:7233
    networks:
      - todo-app
    depends_on:
      - db

  db:
    build: ./backend/db/postgres
    image: todo-app/db
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/postgres.env
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - todo-app

  db-migrate:
    build: ./backend/db/migrate
    image: todo-app/db-migrate
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/migrate.env
    networks:
      - todo-app
    depends_on:
      - db

  minio:
    image: minio/minio
    deploy:
      restart_policy:
        condition: on-failure
    command: server /data
    env_file:
      - ./env/minio.env
    volumes:
      - minio:/data
    networks:
      - todo-app

  minio-console:
    image: minio/console
    deploy:
      restart_policy:
        condition: on-failure
    command: server
    env_file:
      - ./env/minio-console.env
    networks:
      - todo-app
    depends_on:
      - minio

  minio-migrate:
    build: ./monitor/minio/migrate
    image: todo-app/minio-migrate
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/minio.env
      - ./env/minio-migrate.env
    networks:
      - todo-app
    depends_on:
      - minio

  loki:
    build: ./monitor/loki
    image: todo-app/loki
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/minio.env
      - ./env/loki.env
    networks:
      - todo-app
    depends_on:
      - minio

  promtail:
    build: ./monitor/promtail
    image: todo-app/promtail
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/promtail.env
    volumes:
      - promtail:/tmp/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers
    networks:
      - todo-app
    depends_on:
      - loki

  grafana:
    build: ./monitor/grafana/docker
    image: todo-app/grafana
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/grafana.env
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - todo-app
    depends_on:
      - db
      - loki

  grafana-configure:
    build: ./monitor/grafana/configure
    image: todo-app/grafana-configure
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/grafana-configure.env
    networks:
      - todo-app
    depends_on:
      - grafana

  keycloak:
    build:
      context: ./backend/keycloak/docker
      dockerfile: Dockerfile
    image: todo-app/keycloak
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/keycloak.env
    networks:
      - todo-app
    depends_on:
      - db

networks:
  todo-app:

volumes:
  db:
  nats:
  minio:
  grafana:
  promtail:
